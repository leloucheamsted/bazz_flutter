def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33
    // compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion
    aaptOptions.cruncherEnabled = false
aaptOptions.useNewCruncher = false
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8 
//'1.8'
    }
    packagingOptions {
    resources.excludes += "kotlin/reflect/reflect.kotlin_builtins"
    resources.excludes += "kotlin/coroutines/coroutines.kotlin_builtins"
    resources.excludes += "kotlin/collections/collections.kotlin_builtins"
    resources.excludes += "kotlin/internal/internal.kotlin_builtins"
    resources.excludes += "kotlin/ranges/ranges.kotlin_builtins"
    resources.excludes += "kotlin/annotation/annotation.kotlin_builtins"
    resources.excludes.add("META-INF/*")
    resources.excludes.add("kotlin/*")
    
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.bazz_flutter"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 23
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    dependencies {

   testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    annotationProcessor 'com.android.tools.build.jetifier:jetifier-core:1.0.0-beta02'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
        api 'com.google.firebase:firebase-ml-vision-face-model:17.0.2'
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.21'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    
    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    annotationProcessor 'com.android.tools.build.jetifier:jetifier-core:1.0.0-beta02'
    // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.firebase:firebase-analytics:17.5.0'
}
repositories {
    mavenCentral()
}
